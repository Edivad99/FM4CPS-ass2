import "events.cif";

plant automaton RoverYellow:

    //uncontrollable event un_UP, un_DOWN, un_RIGTH, un_LEFT;
    //uncontrollable  event  RANDOM;
    location X0Y0: initial; marked;
        edge YELLOW_CHARGING;
        edge RIGHT_Y goto X1Y0;
        edge DOWN_Y goto X0Y1;

    location X1Y0: marked;
        edge RIGHT_Y goto X2Y0;
        edge LEFT_Y goto X0Y0;
        edge DOWN_Y goto X1Y1;

    location X2Y0: marked;
        edge RIGHT_Y goto X3Y0;
        edge LEFT_Y goto X1Y0;
        edge DOWN_Y goto X2Y1;

    location X3Y0: marked;
        edge RIGHT_Y goto X4Y0;
        edge LEFT_Y goto X2Y0;
        edge DOWN_Y goto X3Y1;

    location X4Y0: marked;
        edge LEFT_Y goto X3Y0;
        edge DOWN_Y goto X4Y1;


    location X0Y1: marked;
        edge UP_Y goto X0Y0;
        edge DOWN_Y goto X0Y2;
        edge RIGHT_Y goto X1Y1;

    // -----------------------------
    location X1Y1: marked;
        /*edge un_UP goto X0Y1;
        edge un_DOWN goto X2Y1;
        edge un_RIGTH goto X1Y0;
        edge un_LEFT goto X1Y2;*/
        edge RANDOM_YELLOW goto X0Y1;
        edge RANDOM_YELLOW goto X2Y1;
        edge RANDOM_YELLOW goto X1Y0;
        edge RANDOM_YELLOW goto X1Y2;
    // -----------------------------

    location X2Y1: marked;
        edge UP_Y goto X2Y0;
        edge DOWN_Y goto X2Y2;
        edge RIGHT_Y goto X3Y1;
        edge LEFT_Y goto X1Y1;

    location X3Y1: marked;
        edge UP_Y goto X3Y0;
        edge DOWN_Y goto X3Y2;
        edge RIGHT_Y goto X4Y1;
        edge LEFT_Y goto X2Y1;

    location X4Y1: marked;
        edge UP_Y goto X4Y0;
        edge DOWN_Y goto X4Y2;
        edge LEFT_Y goto X3Y1;

    location X0Y2: marked;
        edge UP_Y goto X0Y1;
        edge RIGHT_Y goto X1Y2;

    location X1Y2: marked;
        edge UP_Y goto X1Y1;
        edge RIGHT_Y goto X2Y2;
        edge LEFT_Y goto X0Y2;

    location X2Y2: marked;
        edge UP_Y goto X2Y1;
        edge RIGHT_Y goto X3Y2;
        edge LEFT_Y goto X1Y2;

    location X3Y2: marked;
        edge UP_Y goto X3Y1;
        edge RIGHT_Y goto X4Y2;
        edge LEFT_Y goto X2Y2;

    location X4Y2: marked;
        edge UP_Y goto X4Y1;
        edge LEFT_Y goto X3Y2;


end


svgfile "gui.svg";


svgout id "rover_yellow" attr "transform" value

    if RoverYellow.X0Y0:
        translations_yellow(0,0)
    elif RoverYellow.X1Y0:
        translations_yellow(1,0)
    elif RoverYellow.X2Y0:
        translations_yellow(2,0)
    elif RoverYellow.X3Y0:
        translations_yellow(3,0)
    elif RoverYellow.X4Y0:
        translations_yellow(4,0)
    elif RoverYellow.X0Y1:
        translations_yellow(0,1)
    elif RoverYellow.X1Y1:
        translations_yellow(1,1)
    elif RoverYellow.X2Y1:
        translations_yellow(2,1)
    elif RoverYellow.X3Y1:
        translations_yellow(3,1)
    elif RoverYellow.X4Y1:
        translations_yellow(4,1)
    elif RoverYellow.X0Y2:
        translations_yellow(0,2)
    elif RoverYellow.X1Y2:
        translations_yellow(1,2)
    elif RoverYellow.X2Y2:
        translations_yellow(2,2)
    elif RoverYellow.X3Y2:
        translations_yellow(3,2)
    elif RoverYellow.X4Y2:
        translations_yellow(4,2)
    else
        translations_yellow(0,0)
    end;

func string translations_yellow(int x ; int y) :
    int new_x = 50 * x;
    int new_y = 50 * y;
    return fmt("translate(%d, %d)", new_x, new_y);
end
